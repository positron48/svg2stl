name: Build SVG to STL Converter

on:
  push:
    tags:
      - '*' # При публикации тега с версией (например v1.0.0)
  workflow_dispatch: # Для ручного запуска

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04  # Используем более старую версию Ubuntu для максимальной совместимости
            artifact_name: svg2stl-linux
            asset_name: svg2stl-linux
          - os: windows-latest
            artifact_name: svg2stl-windows.exe
            asset_name: svg2stl-windows
          - os: macos-latest
            artifact_name: svg2stl-macos
            asset_name: svg2stl-macos

    steps:
    - name: Checkout код
      uses: actions/checkout@v4

    - name: Настройка Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'  # Используем Python 3.8 для лучшей совместимости
        cache: 'pip'

    # Установка GTK и Cairo для Windows
    - name: Установка GTK и Cairo для Windows
      if: matrix.os == 'windows-latest'
      run: |
        curl -LO https://github.com/tschoonj/GTK-for-Windows-Runtime-Environment-Installer/releases/download/2021-04-29/gtk3-runtime-3.24.29-2021-04-29-ts-win64.exe
        7z x gtk3-runtime-3.24.29-2021-04-29-ts-win64.exe -ogtk3
        echo "$PWD/gtk3/bin" >> $GITHUB_PATH
        dir gtk3\bin

    - name: Установка зависимостей
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Создание файлов метаданных для Windows
      if: matrix.os == 'windows-latest'
      shell: bash
      run: |
        # Создание файла версии
        cat > version_info.txt << EOF
        # UTF-8
        #
        # For more details about fixed file info 'ffi' see:
        # http://msdn.microsoft.com/en-us/library/ms646997.aspx
        VSVersionInfo(
          ffi=FixedFileInfo(
            # filevers и prodvers должны быть всегда кортежами из 4-х 16-битных чисел
            filevers=(1, 0, 0, 0),
            prodvers=(1, 0, 0, 0),
            # Содержит флаг маски для файла
            mask=0x3f,
            # Содержит флаг, определяющий тип файла
            flags=0x0,
            # ОС, для которой предназначен этот файл
            OS=0x40004,
            # Тип файла
            fileType=0x1,
            # Подтип файла
            subtype=0x0,
            # Дата создания
            date=(0, 0)
          ),
          kids=[
            StringFileInfo(
              [
              StringTable(
                '040904B0',
                [StringStruct('CompanyName', 'SVG to STL Converter'),
                StringStruct('FileDescription', 'SVG to STL Converter Tool'),
                StringStruct('FileVersion', '1.0.0'),
                StringStruct('InternalName', 'svg2stl'),
                StringStruct('LegalCopyright', 'MIT License'),
                StringStruct('OriginalFilename', 'svg2stl.exe'),
                StringStruct('ProductName', 'SVG to STL Converter'),
                StringStruct('ProductVersion', '1.0.0')])
              ]),
            VarFileInfo([VarStruct('Translation', [1033, 1200])])
          ]
        )
        EOF

        # Создание файла манифеста Windows
        cat > uac_manifest.xml << EOF
        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
        <assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0">
          <assemblyIdentity version="1.0.0.0" processorArchitecture="*" name="svg2stl" type="win32"/>
          <description>SVG to STL Converter Tool</description>
          <trustInfo xmlns="urn:schemas-microsoft-com:asm.v3">
            <security>
              <requestedPrivileges>
                <requestedExecutionLevel level="asInvoker" uiAccess="false"/>
              </requestedPrivileges>
            </security>
          </trustInfo>
          <compatibility xmlns="urn:schemas-microsoft-com:compatibility.v1">
            <application>
              <!-- Windows 10 и Windows Server 2016 -->
              <supportedOS Id="{8e0f7a12-bfb3-4fe8-b9a5-48fd50a15a9a}"/>
              <!-- Windows 8.1 и Windows Server 2012 R2 -->
              <supportedOS Id="{1f676c76-80e1-4239-95bb-83d0f6d0da78}"/>
              <!-- Windows 8 и Windows Server 2012 -->
              <supportedOS Id="{4a2f28e3-53b9-4441-ba9c-d69d4a4a6e38}"/>
              <!-- Windows 7 и Windows Server 2008 R2 -->
              <supportedOS Id="{35138b9a-5d96-4fbd-8e2d-a2440225f93a}"/>
              <!-- Windows Vista и Windows Server 2008 -->
              <supportedOS Id="{e2011457-1546-43c5-a5fe-008deee3d3f0}"/>
            </application>
          </compatibility>
        </assembly>
        EOF

    - name: Сборка с PyInstaller для Linux
      if: matrix.os == 'ubuntu-20.04'
      run: |
        # Используем специальные опции для создания максимально портативного бинарника
        pyinstaller --onefile --clean --name ${{ matrix.artifact_name }} \
          --hidden-import=PIL._tkinter_finder \
          --exclude-module=tcl \
          --exclude-module=tk \
          --exclude-module=Tkinter \
          --exclude-module=_tkinter \
          svg2stl.py

    - name: Сборка с PyInstaller для macOS
      if: matrix.os == 'macos-latest'
      run: |
        pyinstaller --onefile --name ${{ matrix.artifact_name }} svg2stl.py

    - name: Сборка с PyInstaller для Windows
      if: matrix.os == 'windows-latest'
      shell: cmd
      run: |
        :: Добавляем путь к GTK/Cairo в PATH для pyinstaller
        set PATH=%PATH%;%CD%\gtk3\bin
        
        :: Используем улучшенные параметры сборки для Windows
        pyinstaller --onefile --clean --name ${{ matrix.artifact_name }} ^
          --version-file=version_info.txt ^
          --manifest=uac_manifest.xml ^
          --hidden-import=PIL._tkinter_finder ^
          --hidden-import=Cairo ^
          --hidden-import=cairosvg ^
          --hidden-import=cairocffi ^
          --exclude-module=tcl ^
          --exclude-module=tk ^
          --exclude-module=Tkinter ^
          --exclude-module=_tkinter ^
          --collect-all cairosvg ^
          --collect-all cairocffi ^
          --collect-data cairo ^
          --add-binary "%CD%\gtk3\bin\libcairo-2.dll;." ^
          --add-binary "%CD%\gtk3\bin\libfontconfig-1.dll;." ^
          --add-binary "%CD%\gtk3\bin\libfreetype-6.dll;." ^
          --add-binary "%CD%\gtk3\bin\libpng16-16.dll;." ^
          --add-binary "%CD%\gtk3\bin\zlib1.dll;." ^
          --add-binary "%CD%\gtk3\bin\libpixman-1-0.dll;." ^
          --add-binary "%CD%\gtk3\bin\libexpat-1.dll;." ^
          --noupx ^
          svg2stl.py

    - name: Загрузить артефакты сборки
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: dist/${{ matrix.artifact_name }}*

  release:
    name: Создание релиза
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    
    steps:
    - name: Checkout код
      uses: actions/checkout@v4
      
    - name: Создание релиза
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        generate_release_notes: true
      
    - name: Скачать все артефакты
      uses: actions/download-artifact@v4
      
    - name: Загрузить артефакты в релиз
      uses: softprops/action-gh-release@v1
      with:
        files: |
          svg2stl-linux/svg2stl-linux
          svg2stl-windows/svg2stl-windows.exe
          svg2stl-macos/svg2stl-macos 